% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/EM_random.R
\name{EM_random}
\alias{EM_random}
\title{Wrapper function with random starting values for the EM algorithm}
\usage{
EM_random(theta.null, nstart, x.syn, x.non, c1, c2, iter, ui, ci,
  parallel = F)
}
\arguments{
\item{theta.null}{3x2 matrix, with minimal value in column one, maximal value in column 2, alpha, beta, p1 in lines 1-3.}

\item{nstart}{Integer. Number of random starting values}

\item{parallel}{Logical. If true, the function mclapply is used for parallelization. Only makes sense when multiple cores are available.

The other parameters are the same as in \code{\link{rnegbinmix::EM}}.}
}
\value{
A list consisting of \code{nstart} objects, each one a list just like the output of EM (trajectory of theta, Q and convergence code), see \code{\link{rnegbinmix::EM}}.
}
\description{
The function EM is called multiple times, each time with a random starting value drawn from a uniform distribution on a user-defined hypercube.
}
\examples{
# Simulate dataset of synonymous and non-synonymous mutations

c1 = 0.5; c2 = 10
p1 = 0.2; p2 = 0.8
alpha = 10
beta = 5

mutations = rnegbinmix_syn_nonsyn(n=3000, alpha=alpha, beta=beta, c=c(c1, c2), p = c(p1, p2))

# EM algorithm

# Constraints: ui \%*\% theta - ci >= 0
# alpha > 0, beta > 0, 0 <= p1 <=1

ui = rbind(c(1, 0, 0), c(0, 1, 0), c(0, 0, 1), c(0, 0, -1))
ci = c(0, 0, 0, -1)

# Starting values
theta.null = matrix(c(1, 1, 0.05, 20, 10, 0.5), ncol=2, nrow=3, byrow=F)
nstart = 5

# Run EM algorithm
EMres = EM_random(theta.null = theta.null, nstart=nstart, x.syn = mutations$Syn, x.non = mutations$Non, c1 = c1, c2 = c2, iter=25, ui = ui, ci=ci, parallel=T)

# Plot results
par(mfrow=c(3,2))
 for(i in 1:5) matplot(EMres[[i]]$theta, t="l")
par(mfrow=c(1,1))
}
\author{
Johanna Bertl
}

